include:
  - docker-compose-collector.yaml
  - docker-compose-tracing.yaml

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./.config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - dev

  loki:
    image: grafana/loki:latest
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    networks:
      - dev

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./.config/ds.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    depends_on:
      - loki
      - collector
    networks:
      - dev

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - ConnectionStrings__DbConnectionString=Server=postgres;Port=5432;Database=random_user;User Id=postgres;Password=postgres;
      - ExternalServices__RandomUserApi__Url=https://randomuser.me
      - OpenTelemetry__ServiceName=random.user
      - OpenTelemetry__Endpoint=http://collector:4318
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "8080:8080"
    networks:
      - dev

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev

volumes:
  postgres_data:

networks:
  dev:
    driver: bridge